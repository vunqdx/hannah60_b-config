/*
 * Copyright (c) 2021 Nick Winans
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#define DEFAULT 0
#define LOWER   1
#define RAISE   2
/ {
	keymap {
		compatible = "zmk,keymap";
		
		default_layer {
// ------------------------------------------------------------------------------------------
// | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  | BSPC |DEL|
// | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   "|"   |
// | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |     ENTER    |
// |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |      SHIFT       |
// |  CTL  |  WIN  |  ALT  |            SPACE              |  ALT  |  WIN  |  MO(1) |  CTL  |
// ------------------------------------------------------------------------------------------
			bindings = <
	&kp ESC         &kp N1     &kp N2   &kp N3 &kp N4 &kp N5    &kp N6 &kp N7 &kp N8 &kp N9    &kp N0   &kp MINUS &kp EQUAL &kp BSPC &kp DEL
	&kp TAB        &kp Q      &kp W    &kp E  &kp R  &kp T     &kp Y  &kp U  &kp I  &kp O     &kp P    &kp LBKT  &kp RBKT  &kp BSLH
	&lt LOWER CLCK &kp A      &kp S    &kp D  &kp F  &kp G     &kp H  &kp J  &kp K  &kp L     &kp SEMI &kp SQT             &kp RET
	&kp LSHFT &kp NON_US_HASH &kp Z    &kp X  &kp C  &kp V     &kp B  &kp N  &kp M  &kp COMMA &kp DOT  &kp FSLH  &kp RSHFT &mo RAISE
	&kp LCTRL &kp LGUI	  &kp LALT               &kp SPACE                      &kp RALT  &kp RGUI &kp RGUI   &kp RCTRL
			>;
		};
		
		2nd_layer {
// ------------------------------------------------------------------------------------------
// | boot | BT CLR | BT1 | BT2 | BT3 | BT4 | BT5 | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS |  TRNS  |
// | TRNS | TRNS |  UP  | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS |
// | TRNS | LEFT | DOWN | RGHT | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS |
// | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS |
// | TRNS  | TRNS  |  TRNS |             TRNS              | TRNS  |  TRNS |  TRNS | TRNS  |
// ------------------------------------------------------------------------------------------
			bindings = <
	&kp GRAVE   &bt BT_CLR &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &trans &trans &trans &trans &trans &trans &trans &trans 
	&trans      &trans     &kp UP          &trans          &bootloader     &trans          &kp INS         &trans &trans &trans &trans &trans &trans &trans 
	&trans      &kp LEFT   &kp DOWN        &kp RIGHT       &trans          &trans          &trans          &trans &trans &trans &trans &trans &trans 
	&trans      &trans     &trans          &trans          &trans          &trans          &trans          &trans &trans &trans &trans &trans &trans &trans    
	&trans      &trans     &trans                                                          &trans                               &trans &trans &trans &trans   
			>;
		};
		
		3nd_layer {
// ------------------------------------------------------------------------------------------
// | boot | F1 | F2 | F3 | F4 | F5 | F6 | F7 | F8 | F9 | F10 | F11 | F12 |  TRNS  |
// | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS |
// | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS |
// | TRNS | TRNS | VOL_DN | VOL_UP | PREV | NEXT | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS |
// | TRNS  | TRNS  |  TRNS |             PLAY/PAUS              | TRNS  |  TRNS |  TRNS | TRNS  |
// ------------------------------------------------------------------------------------------
			bindings = <
	&trans      &kp F1     &kp F2          &kp F3          &kp F4          &kp F5          &kp F6          &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12 &trans &trans 
	&trans      &trans     &trans          &trans          &trans          &trans          &trans          &trans &trans &trans &kp PSCRN &kp SLCK &kp PAUSE_BREAK &trans 
	&trans      &trans     &trans          &trans          &trans          &trans          &trans          &trans &trans &kp INS   &kp HOME &kp PG_UP &trans 
	&trans      &trans     &kp C_VOL_DN    &trans          &trans          &kp C_NEXT      &trans          &trans &trans &kp DEL   &kp END  &kp PG_DN &kp C_VOL_UP &trans    
	&trans      &trans     &trans                                                          &kp C_PP                                &trans   &kp C_PREV &kp C_VOL_DN &kp K_NEXT   
			>;
		};
	};
};
